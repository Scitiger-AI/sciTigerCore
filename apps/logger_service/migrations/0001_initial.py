# Generated by Django 5.2.1 on 2025-06-03 07:20

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tenant_service", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LogEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("debug", "调试"),
                            ("info", "信息"),
                            ("warning", "警告"),
                            ("error", "错误"),
                            ("critical", "严重"),
                        ],
                        default="info",
                        max_length=20,
                        verbose_name="日志级别",
                    ),
                ),
                ("message", models.TextField(verbose_name="日志消息")),
                (
                    "source",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="来源"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP地址"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="用户代理"),
                ),
                (
                    "request_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="请求ID"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, null=True, verbose_name="元数据"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间戳"),
                ),
            ],
            options={
                "verbose_name": "日志条目",
                "verbose_name_plural": "日志条目",
                "ordering": ["-timestamp"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LogCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="分类名称"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="分类代码"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="描述"),
                ),
                (
                    "is_system",
                    models.BooleanField(default=False, verbose_name="是否系统分类"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "日志分类",
                "verbose_name_plural": "日志分类",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="LogRetentionPolicy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "retention_days",
                    models.IntegerField(default=30, verbose_name="保留天数"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="retention_policies",
                        to="logger_service.logcategory",
                        verbose_name="日志分类",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="log_retention_policies",
                        to="tenant_service.tenant",
                        verbose_name="所属租户",
                    ),
                ),
            ],
            options={
                "verbose_name": "日志保留策略",
                "verbose_name_plural": "日志保留策略",
                "ordering": ["category__name"],
                "unique_together": {("tenant", "category")},
            },
        ),
    ]
