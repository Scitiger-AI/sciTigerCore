# Generated by Django 5.2.1 on 2025-06-02 07:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth_service", "0001_initial"),
        ("tenant_service", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="apikey",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="api_keys",
                to="tenant_service.tenant",
                verbose_name="所属租户",
            ),
        ),
        migrations.AddField(
            model_name="apikey",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="api_keys",
                to=settings.AUTH_USER_MODEL,
                verbose_name="所属用户",
            ),
        ),
        migrations.AddField(
            model_name="apikeyscope",
            name="api_key",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="scopes",
                to="auth_service.apikey",
                verbose_name="API密钥",
            ),
        ),
        migrations.AddField(
            model_name="apikeyusagelog",
            name="api_key",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="usage_logs",
                to="auth_service.apikey",
                verbose_name="API密钥",
            ),
        ),
        migrations.AddField(
            model_name="apikeyusagelog",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="api_key_logs",
                to="tenant_service.tenant",
                verbose_name="所属租户",
            ),
        ),
        migrations.AddField(
            model_name="loginattempt",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="login_attempts",
                to="tenant_service.tenant",
                verbose_name="所属租户",
            ),
        ),
        migrations.AddField(
            model_name="loginattempt",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="login_attempts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="permission",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permissions",
                to="tenant_service.tenant",
                verbose_name="所属租户",
            ),
        ),
        migrations.AddField(
            model_name="role",
            name="permissions",
            field=models.ManyToManyField(
                blank=True,
                related_name="roles",
                to="auth_service.permission",
                verbose_name="权限",
            ),
        ),
        migrations.AddField(
            model_name="role",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="roles",
                to="tenant_service.tenant",
                verbose_name="所属租户",
            ),
        ),
        migrations.AddField(
            model_name="role",
            name="users",
            field=models.ManyToManyField(
                related_name="role_users",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="roles",
            field=models.ManyToManyField(
                related_name="user_roles", to="auth_service.role", verbose_name="角色"
            ),
        ),
        migrations.AddField(
            model_name="userverification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="verifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="apikeyscope",
            unique_together={("api_key", "service", "resource", "action")},
        ),
        migrations.AlterUniqueTogether(
            name="permission",
            unique_together={("service", "resource", "action")},
        ),
        migrations.AlterUniqueTogether(
            name="role",
            unique_together={("code", "tenant")},
        ),
    ]
