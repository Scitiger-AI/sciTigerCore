# Generated by Django 5.2.1 on 2025-06-02 07:23

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiKeyScope",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service", models.CharField(max_length=50, verbose_name="服务名称")),
                ("resource", models.CharField(max_length=50, verbose_name="资源类型")),
                ("action", models.CharField(max_length=50, verbose_name="操作类型")),
            ],
            options={
                "verbose_name": "API密钥作用域",
                "verbose_name_plural": "API密钥作用域",
            },
        ),
        migrations.CreateModel(
            name="ApiKeyUsageLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_path",
                    models.CharField(max_length=255, verbose_name="请求路径"),
                ),
                (
                    "request_method",
                    models.CharField(max_length=10, verbose_name="请求方法"),
                ),
                ("response_status", models.IntegerField(verbose_name="响应状态码")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间戳"),
                ),
                (
                    "client_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="客户端IP"
                    ),
                ),
                (
                    "request_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="请求ID"
                    ),
                ),
            ],
            options={
                "verbose_name": "API密钥使用日志",
                "verbose_name_plural": "API密钥使用日志",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="邮箱地址")),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP地址")),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="用户代理"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "成功"),
                            ("failed", "失败"),
                            ("blocked", "已阻止"),
                        ],
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="原因"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间戳"),
                ),
                (
                    "is_admin_login",
                    models.BooleanField(default=False, verbose_name="是否管理员登录"),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="失败原因"
                    ),
                ),
            ],
            options={
                "verbose_name": "登录尝试",
                "verbose_name_plural": "登录尝试",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="权限ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="权限代码"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="权限名称")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="权限描述"),
                ),
                ("service", models.CharField(max_length=50, verbose_name="服务名称")),
                ("resource", models.CharField(max_length=50, verbose_name="资源类型")),
                ("action", models.CharField(max_length=50, verbose_name="操作类型")),
                (
                    "is_system",
                    models.BooleanField(default=False, verbose_name="是否系统权限"),
                ),
                (
                    "is_tenant_level",
                    models.BooleanField(default=False, verbose_name="是否租户级权限"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "权限",
                "verbose_name_plural": "权限",
                "ordering": ["service", "resource", "action"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="角色ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="角色名称")),
                ("code", models.CharField(max_length=100, verbose_name="角色代码")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="角色描述"),
                ),
                (
                    "is_system",
                    models.BooleanField(default=False, verbose_name="是否系统角色"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="是否默认角色"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "角色",
                "verbose_name_plural": "角色",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserVerification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "verification_type",
                    models.CharField(
                        choices=[
                            ("email_verification", "邮箱验证"),
                            ("phone_verification", "手机验证"),
                            ("password_reset", "密码重置"),
                            ("two_factor", "双因素认证"),
                        ],
                        max_length=50,
                        verbose_name="验证类型",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="验证令牌"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="验证码"
                    ),
                ),
                (
                    "is_used",
                    models.BooleanField(default=False, verbose_name="是否已使用"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="过期时间")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="使用时间"
                    ),
                ),
            ],
            options={
                "verbose_name": "用户验证",
                "verbose_name_plural": "用户验证",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="用户ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="邮箱地址"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="用户名"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=30, verbose_name="名"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="姓"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="是否职员"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="是否超级管理员"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="avatars", verbose_name="头像"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="电话"
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True, verbose_name="简介")),
                (
                    "email_verified",
                    models.BooleanField(default=False, verbose_name="邮箱已验证"),
                ),
                (
                    "phone_verified",
                    models.BooleanField(default=False, verbose_name="电话已验证"),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(default=False, verbose_name="双因素认证已启用"),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="最后登录IP"
                    ),
                ),
                (
                    "password_changed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="密码修改时间"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="注册时间"
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后活跃时间"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "ordering": ["-date_joined"],
            },
        ),
        migrations.CreateModel(
            name="ApiKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key_type",
                    models.CharField(
                        choices=[("system", "系统级"), ("user", "用户级")],
                        default="user",
                        max_length=20,
                        verbose_name="密钥类型",
                    ),
                ),
                (
                    "key_hash",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="密钥哈希"
                    ),
                ),
                ("prefix", models.CharField(max_length=8, verbose_name="密钥前缀")),
                ("name", models.CharField(max_length=100, verbose_name="密钥名称")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="过期时间"
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后使用时间"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="元数据"),
                ),
                (
                    "application_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="应用名称"
                    ),
                ),
                (
                    "created_by_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_keys",
                        to="auth_service.apikey",
                        verbose_name="创建此密钥的密钥",
                    ),
                ),
            ],
            options={
                "verbose_name": "API密钥",
                "verbose_name_plural": "API密钥",
                "ordering": ["-created_at"],
            },
        ),
    ]
